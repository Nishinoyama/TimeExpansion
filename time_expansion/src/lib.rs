/// Time(Temporal) Expansion methods.
///
/// # Time Expansion
///
/// ## Time Expanded Models
///
/// Considering full scan designed sequential circuits and their combinational circuit parts,
/// it is difficult for them to apply two consecutive test patterns.
/// So we exist two models, Broadside and Skewedload, to apply the second pattern into the models.
///
/// ## This module can do
///
/// + extract combinational circuit module in a full scan designed sequential circuit
/// + insert a stuck-at-fault into circuit module
/// + broadside expand
/// + skedload expand (WIP)
///
/// ## References
///
/// + [Iwata, Hiroshi, Nanami Katayama, and Ken'ichi Yamaguchi. "Formal Verification-Based Redundancy Identification of Transition Faults with Broadside Scan Tests." IEICE Transactions on Information and Systems 100.6 (2017): 1182-1189.](https://www.jstage.jst.go.jp/article/transinf/E100.D/6/E100.D_2016FOP0007/_article/-char/en)
///
pub mod time_expansion;

/// Netlist Verilog Compiler/Serializer methods.
///
/// # Verilog for Netlist
///
/// ## Verilog
///
/// Verilog is HDL (Hardware Description Language) standardized as IEEE 1364.
/// We use Verilog for designing and verifying digital circuits on Register Transfer Level.
///
/// ## Netlist
///
/// **Netlist** is logically equivalent description containing only of primitives, which is generated by
/// logic synthesis.
/// Netlist can be used in ATPG(Automation Test Pattern Generator) to generate patterns cover
/// especial circuitry faults.
///
/// ## This module can do
///
/// + compile netlist
/// + serialize(decompile) compiled netlist to write source
///
pub mod verilog;
